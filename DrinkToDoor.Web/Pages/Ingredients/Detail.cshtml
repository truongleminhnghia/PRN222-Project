@page
@using DrinkToDoor.Data.enums
@model DrinkToDoor.Web.Pages.Ingredients.Detail
@using System.Globalization
@{
    ViewData["Title"] = "Chi tiết nguyên liệu";
}

@section Styles {
    <style>
        .carousel-control-prev-icon,
        .carousel-control-next-icon {
            filter: brightness(0);
        }

        .thumb-btn img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 4px;
            transition: transform .2s, border-color .2s;
        }

        .thumb-btn.active img {
            border: 2px solid #0d6efd;
            transform: scale(1.1);
        }

        .btn-check:checked+.btn {
            border-color: #0d6efd;
            background-color: #e7f1ff;
        }

        .card-thumb {
            object-fit: cover;
            width: 100%;
            height: 180px;
        }

        .clamp-1,
        .clamp-2 {
            display: -webkit-box;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: normal;
        }

        .clamp-1 {
            -webkit-line-clamp: 1;
        }

        .clamp-2 {
            -webkit-line-clamp: 2;
        }
    </style>
}

<div class="container-xxl mt-4">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb bg-transparent px-0">
            <li class="breadcrumb-item"><a href="/Ingredients/Index">Nguyên liệu</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.IngredientResponse.Name</li>
        </ol>
    </nav>

    <div class="row gx-5 gy-4">
        <div class="col-12 col-lg-6">
            <div id="ingredientCarousel" class="carousel slide mb-3" data-bs-ride="carousel">
                <div class="carousel-inner rounded overflow-hidden">
                    @foreach (var (img, idx) in Model.IngredientResponse.Images.Select((img, idx) => (img, idx)))
                    {
                        <div class="carousel-item @(idx == 0 ? "active" : "")">
                            <img src="@img.Url" class="d-block w-100" style="height:450px; object-fit:cover;"
                                alt="Slide @idx" />
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#ingredientCarousel"
                    data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#ingredientCarousel"
                    data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
            <div class="d-flex justify-content-center gap-2 mb-4">
                @foreach (var (img, idx) in Model.IngredientResponse.Images.Select((img, idx) => (img, idx)))
                {
                    <button type="button" class="thumb-btn btn p-0 @(idx == 0 ? "active" : "")"
                        data-bs-target="#ingredientCarousel" data-bs-slide-to="@idx" aria-label="Slide @idx">
                        <img src="@img.Url" alt="Thumbnail @idx" />
                    </button>
                }
            </div>
        </div>

        <div class="col-12 col-lg-6">
            <div class="card border-0 shadow-sm rounded-4">
                <div class="card-body">
                    <h2 class="text-primary fw-bold">@Model.IngredientResponse.Name</h2>
                    <p class="text-muted">@Model.IngredientResponse.Description</p>

                    <div class="row g-2 mb-3">
                        <div class="col-6">
                            <small class="text-muted">Giá bán</small>
                            <div class="fs-5 text-success fw-semibold">@Model.IngredientResponse.Price.ToString("C0",
                                                                new CultureInfo("vi-VN"))</div>
                        </div>
                        <div class="col-6">
                            <small class="text-muted">Kho</small>
                            <div>@Model.IngredientResponse.StockQty</div>
                        </div>
                        <div class="col-6">
                            <small class="text-muted">Mã</small>
                            <div>@Model.IngredientResponse.Code</div>
                        </div>
                        <div class="col-6">
                            <small class="text-muted">Loại</small>
                            <div>@Model.IngredientResponse?.Category?.Name</div>
                        </div>
                        <div class="col-6">
                            <small class="text-muted">Thương hiệu</small>
                            <div>@Model.IngredientResponse?.Trademark</div>
                        </div>
                        <div class="col-6">
                            <small class="text-muted">Xuất xứ</small>
                            <div>@Model.IngredientResponse?.Origin</div>
                        </div>
                        <div class="col-12">
                            <small class="text-muted">Trạng thái</small>
                            <div>
                                <span
                                    class="badge @(Model.IngredientResponse?.Status == EnumStatus.ACTIVE ? "bg-success" : "bg-secondary")">
                                    @(Model.IngredientResponse?.Status == EnumStatus.ACTIVE ? "Còn hàng" : "Hết hàng")
                                </span>
                            </div>
                        </div>
                    </div>

                    <form method="post">
                        <input type="hidden" name="id" value="@Model.IngredientResponse.Id" />

                        <div class="mb-3">
                            <label class="form-label">Loại đóng gói:</label>
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var (pkg, idx) in Model.IngredientResponse.PackagingOptions.Select((p, i) =>
                                                                (p, i)))
                                {
                                    <input class="btn-check" type="radio" id="pkg_@idx" name="SelectedPackage"
                                        value="@pkg.Type" autocomplete="off" />
                                    <label class="btn btn-outline-secondary" for="pkg_@idx">@pkg.Label</label>
                                }
                            </div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Số lượng:</label>
                            <div class="input-group" style="max-width:160px;">
                                <button class="btn btn-outline-secondary" type="button" id="decQty">-</button>
                                <input asp-for="@Model.CartRequest.Quantity" type="text"
                                    class="form-control text-center" id="inputQty" name="Quantity" value="1" />
                                <button class="btn btn-outline-secondary" type="button" id="incQty">+</button>
                            </div>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg" asp-page-handler="AddToCart">
                                Thêm vào giỏ hàng
                            </button>
                            <button type="submit" class="btn btn-outline-primary btn-lg" asp-page-handler="BuyNow">
                                Mua ngay
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <hr class="my-5">

    <div>
        <h4 class="mb-3">Các cách đóng gói</h4>
        <div class="row g-3">
            @foreach (var pack in Model.IngredientResponse.PackagingOptions)
            {
                <div class="col-md-4">
                    <div class="border p-3 rounded-3 h-100">
                        <div class="fw-bold">@pack.Label</div>
                        <div class="text-muted">Loại: @pack.Type</div>
                    </div>
                </div>
            }
        </div>
    </div>

    <hr class="my-5">

    <div>
        <h4 class="mb-3">Các sản phẩm khác</h4>
        <swiper-container slides-per-view="4" space-between="24" speed="500" loop="true" css-mode="true" autoplay="true"
            autoplay-delay="3000" disable-on-interaction="false">
            @foreach (var item in Model.Ingredients)
            {
                <swiper-slide>
                    <div class="card shadow-sm bg-white ingredient-card h-100" style="width: 18rem;"
                        onclick="location.href='@Url.Page("/Ingredients/Detail", new { id = item.Id })'">
                        <img src="@(item.Images?.FirstOrDefault()?.Url ?? Url.Content("~/images/placeholder.png"))"
                            class="card-img-top card-thumb" alt="@item.Name" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title clamp-1">@item.Name</h5>
                            <p class="card-text text-muted">@item.Price.ToString("C0", new CultureInfo("vi-VN"))</p>
                            <p class="card-text clamp-2">@item.Description</p>
                            <div class="mt-auto d-flex gap-2">
                                <a class="btn btn-primary flex-fill">Thêm giỏ hàng</a>
                                <a asp-page="Detail" asp-route-id="@item.Id" class="btn btn-outline-primary flex-fill">Xem
                                    chi tiết</a>
                            </div>
                        </div>
                    </div>
                </swiper-slide>
            }
        </swiper-container>
    </div>
</div>

@section Scripts {
    <script>
        const carouselEl = document.getElementById('ingredientCarousel');
        const thumbs = document.querySelectorAll('.thumb-btn');
        carouselEl.addEventListener('slid.bs.carousel', e => {
            thumbs.forEach(t => t.classList.remove('active'));
            thumbs[e.to].classList.add('active');
        });
        thumbs.forEach((btn, idx) => btn.addEventListener('click', () => bootstrap.Carousel.getInstance(carouselEl).to(idx)));

        const qtyInput = document.getElementById('inputQty');
        document.getElementById('incQty').addEventListener('click', () => qtyInput.value = +qtyInput.value + 1);
        document.getElementById('decQty').addEventListener('click', () => {
            if (+qtyInput.value > 1) qtyInput.value = +qtyInput.value - 1;
        });
    </script>
}
