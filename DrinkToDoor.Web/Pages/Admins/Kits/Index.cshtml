@page
@using System.Reflection
@using System.ComponentModel.DataAnnotations
@using DrinkToDoor.Data.enums
@model DrinkToDoor.Web.Pages.Admins.Kits.IndexModel
@{
    ViewData["Title"] = "Danh sách kit";
    Layout = "_LayoutAdmin";
}

@section Styles {
    <style>
        .text-14 {
            font-size: 14px;
        }

        .text-20 {
            font-size: 20px;
            font-weight: 600;
        }

        .py-5 {
            padding: 3rem 0;
        }

        .mb-4 {
            margin-bottom: 1.5rem;
        }

        .me-1 {
            margin-right: .25rem;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, .05);
        }

        .pagination-sm .page-link {
            padding: .25rem .5rem;
            font-size: .875rem;
        }

        .badge {
            padding: 0.5em 0.75em;
            font-size: 90%;
            border-radius: 0.5rem;
        }
    </style>
}

<div class="container-xxxl py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-20 fw-bold text-primary">@ViewData["Title"]</h1>
        <a asp-page="Create" class="btn btn-success btn-sm text-16">
            <i class="bi bi-plus-lg me-1"></i> Tạo Mới
        </a>
    </div>

    <div class="card shadow-sm">
        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-light text-center text-14">
                    <tr>
                        <th style="width: 5%;">STT</th>
                        <th class="text-start" style="width: 30%;">Tên</th>
                        <th style="width: 20%;">Trạng thái</th>
                        <th style="width: 20%;">Giá tiền</th>
                        <th style="width: 10%;">Tổng số nguyên liệu</th>
                        <th style="width: 30%;">Ngày Tạo</th>
                        <th style="width: 40%;">Hàng Động</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Kits.Select((u, idx) => new { u, idx }))
                    {
                        var badgeClass = GetBadgeClass(item.u.Status);
                        <tr class="text-14 text-center">
                            <td>@((Model.PageCurrent - 1) * Model.PageSize + item.idx + 1)</td>
                            <td class="text-start">@item.u.Name</td>
                            <td>
                                <span class="badge @badgeClass">
                                    @GetDisplayName(item.u.Status)
                                </span>
                            </td>
                            <td class="text-center">@item.u.TotalAmount</td>
                            <td class="text-center">@item.u?.KitIngredients?.Count()</td>
                            <td class="text-center">@item.u?.CreatedAt</td>
                            <td>
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-page="Edit" asp-route-id="@item.u.Id"
                                        class="btn btn-warning text-white me-1">Sửa</a>
                                    <a asp-page="Detail" asp-route-id="@item.u.Id"
                                        class="btn btn-info text-white me-1">Xem</a>
                                    <button type="button" class="btn btn-danger text-white" data-bs-toggle="modal"
                                        data-bs-target="#deleteIngredientModal" data-id="@item.u.Id"
                                        data-name="@item.u.Name">
                                        Xóa
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="card-footer bg-white">
            <nav aria-label="Trang">
                <ul class="pagination pagination-sm mb-0 justify-content-start">
                    <li class="page-item @(Model.PageCurrent == 1 ? "disabled" : "")">
                        <a class="page-link" asp-route-PageCurrent="@(Model.PageCurrent - 1)"
                            asp-route-PageSize="@Model.PageSize">&lsaquo;</a>
                    </li>
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageCurrent ? "active" : "")">
                            <a class="page-link" asp-route-PageCurrent="@i" asp-route-PageSize="@Model.PageSize">@i</a>
                        </li>
                    }
                    <li class="page-item @(Model.PageCurrent == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-route-PageCurrent="@(Model.PageCurrent + 1)"
                            asp-route-PageSize="@Model.PageSize">&rsaquo;</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@functions {
    private string GetDisplayName(Enum value)
    {
        var member = value.GetType().GetMember(value.ToString()).FirstOrDefault();
        var attr = member?.GetCustomAttribute<DisplayAttribute>();
        return attr?.GetName() ?? value.ToString();
    }

    private string GetBadgeClass(EnumStatus status)
    {
        return status switch
        {
            EnumStatus.ACTIVE => "bg-success",
            EnumStatus.INACTIVE => "bg-danger",
            _ => "bg-secondary"
        };
    }
}